{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/chriswang/Desktop/shopping-cart/src/components/counter.jsx\";\nimport React, { Component } from \"react\";\n\nclass Counter extends Component {\n  componentDidUpdate(prevProps, prevState) {// make ajax calls to server to get new data\n  } //called just before component is removed from DOM\n  //in our case, this happens when counter component is deleted\n\n\n  componentWillUnmount() {\n    console.log(\"Unmounted\");\n  }\n\n  render() {\n    console.log(\"Counter - Rendered\");\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: this.getBadgeClasses(),\n        children: this.formatCount()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.props.onIncrement(this.props.counter),\n        className: \"btn btn-secondary btn-sm\",\n        children: \"Increment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.props.onDelete(this.props.counter.id),\n        className: \"btn btn-danger btn-sm m-2\",\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this);\n  }\n\n  getBadgeClasses() {\n    let classes = \"badge m-2 badge-\";\n    classes += this.props.counter.value === 0 ? \"warning\" : \"primary\";\n    return classes;\n  }\n\n  formatCount() {\n    const {\n      value\n    } = this.props.counter;\n    return value === 0 ? \"Zero\" : value;\n  }\n\n}\n\nexport default Counter;","map":{"version":3,"sources":["/Users/chriswang/Desktop/shopping-cart/src/components/counter.jsx"],"names":["React","Component","Counter","componentDidUpdate","prevProps","prevState","componentWillUnmount","console","log","render","getBadgeClasses","formatCount","props","onIncrement","counter","onDelete","id","classes","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;AAC9BE,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuB,CACvC;AACD,GAH6B,CAK9B;AACA;;;AACAC,EAAAA,oBAAoB,GAAG;AACrBC,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACPF,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACA,wBACE;AAAA,8BACE;AAAM,QAAA,SAAS,EAAE,KAAKE,eAAL,EAAjB;AAAA,kBAA0C,KAAKC,WAAL;AAA1C;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,OAAO,EAAE,MAAM,KAAKC,KAAL,CAAWC,WAAX,CAAuB,KAAKD,KAAL,CAAWE,OAAlC,CADjB;AAEE,QAAA,SAAS,EAAC,0BAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAQE;AACE,QAAA,OAAO,EAAE,MAAM,KAAKF,KAAL,CAAWG,QAAX,CAAoB,KAAKH,KAAL,CAAWE,OAAX,CAAmBE,EAAvC,CADjB;AAEE,QAAA,SAAS,EAAC,2BAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAiBD;;AAEDN,EAAAA,eAAe,GAAG;AAChB,QAAIO,OAAO,GAAG,kBAAd;AACAA,IAAAA,OAAO,IAAI,KAAKL,KAAL,CAAWE,OAAX,CAAmBI,KAAnB,KAA6B,CAA7B,GAAiC,SAAjC,GAA6C,SAAxD;AACA,WAAOD,OAAP;AACD;;AAEDN,EAAAA,WAAW,GAAG;AACZ,UAAM;AAAEO,MAAAA;AAAF,QAAY,KAAKN,KAAL,CAAWE,OAA7B;AACA,WAAOI,KAAK,KAAK,CAAV,GAAc,MAAd,GAAuBA,KAA9B;AACD;;AAzC6B;;AA4ChC,eAAehB,OAAf","sourcesContent":["import React, { Component } from \"react\";\n\nclass Counter extends Component {\n  componentDidUpdate(prevProps, prevState) {\n    // make ajax calls to server to get new data\n  }\n\n  //called just before component is removed from DOM\n  //in our case, this happens when counter component is deleted\n  componentWillUnmount() {\n    console.log(\"Unmounted\");\n  }\n\n  render() {\n    console.log(\"Counter - Rendered\");\n    return (\n      <div>\n        <span className={this.getBadgeClasses()}>{this.formatCount()}</span>\n        <button\n          onClick={() => this.props.onIncrement(this.props.counter)}\n          className=\"btn btn-secondary btn-sm\"\n        >\n          Increment\n        </button>\n        <button\n          onClick={() => this.props.onDelete(this.props.counter.id)}\n          className=\"btn btn-danger btn-sm m-2\"\n        >\n          Delete\n        </button>\n      </div>\n    );\n  }\n\n  getBadgeClasses() {\n    let classes = \"badge m-2 badge-\";\n    classes += this.props.counter.value === 0 ? \"warning\" : \"primary\";\n    return classes;\n  }\n\n  formatCount() {\n    const { value } = this.props.counter;\n    return value === 0 ? \"Zero\" : value;\n  }\n}\n\nexport default Counter;\n"]},"metadata":{},"sourceType":"module"}